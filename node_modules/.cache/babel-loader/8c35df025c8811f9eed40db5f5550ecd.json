{"ast":null,"code":"var _jsxFileName = \"C:\\\\RS\\\\React\\\\Basic App\\\\basic-app\\\\src\\\\components\\\\Chart\\\\Chart.js\";\nimport React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  const dataPointValues = props.dataPoints.map(dataPoint => {\n    return dataPoint.value;\n  });\n  const totalMaximum = Math.max(...dataPointValues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(dataPoint => /*#__PURE__*/_jsxDEV(ChartBar, {\n      value: dataPoint.value,\n      maxValue: totalMaximum,\n      label: dataPoint.label\n    }, dataPoint.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 46\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/RS/React/Basic App/basic-app/src/components/Chart/Chart.js"],"names":["React","ChartBar","Chart","props","dataPointValues","dataPoints","map","dataPoint","value","totalMaximum","Math","max","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAU;AACpB,QAAMC,eAAe,GAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqBC,SAAS,IAAI;AAAC,WAAOA,SAAS,CAACC,KAAjB;AAAwB,GAA3D,CAAxB;AACA,QAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGP,eAAZ,CAArB;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACFD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAsBC,SAAD,iBAAe,QAAC,QAAD;AAAgC,MAAA,KAAK,EAAEA,SAAS,CAACC,KAAjD;AAAwD,MAAA,QAAQ,EAAIC,YAApE;AAAkF,MAAA,KAAK,EAAEF,SAAS,CAACK;AAAnG,OAAeL,SAAS,CAACK,KAAzB;AAAA;AAAA;AAAA;AAAA,YAApC;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CAPD;;KAAMV,K;AASN,eAAeA,KAAf","sourcesContent":["import React from \"react\"; \r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) =>{\r\n    const dataPointValues = props.dataPoints.map(dataPoint => {return dataPoint.value;});\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return <div className=\"chart\">\r\n        {props.dataPoints.map((dataPoint) => <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue = {totalMaximum} label={dataPoint.label}/>)}\r\n    </div>\r\n};\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}